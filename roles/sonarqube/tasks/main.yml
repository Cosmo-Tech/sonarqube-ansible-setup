---
# SonarQube role tasks

# Directory setup
- name: Create SonarQube directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ sonarqube_data_dir }}"
    - "{{ sonarqube_extensions_dir }}"
    - "{{ sonarqube_logs_dir }}"
    - "{{ sonarqube_temp_dir }}"
    - "{{ sonarqube_base_dir }}/docker"

# Configuration
- name: Set sysctl parameters for SonarQube
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    state: present
    reload: true

- name: Copy Docker Compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ sonarqube_base_dir }}/docker/docker-compose.yml"
    mode: "0644"

# Deployment
- name: Pull SonarQube image
  ansible.builtin.command:
    cmd: docker pull sonarqube:{{ sonarqube_version }}
  changed_when: true

- name: Check if Docker Compose file exists
  ansible.builtin.stat:
    path: "{{ sonarqube_base_dir }}/docker/docker-compose.yml"
  register: compose_file

- name: Check if SonarQube is running
  ansible.builtin.command:
    cmd: docker compose ps -q sonarqube
    chdir: "{{ sonarqube_base_dir }}/docker"
  register: sonarqube_status
  changed_when: false
  failed_when: false
  when: compose_file.stat.exists

- name: Start SonarQube with Docker Compose
  ansible.builtin.command:
    cmd: docker compose up -d
    chdir: "{{ sonarqube_base_dir }}/docker"
  register: compose_output
  changed_when: compose_output.rc == 0
  when: not compose_file.stat.exists or sonarqube_status.stdout == ""

- name: Wait for SonarQube to be ready
  ansible.builtin.uri:
    url: "http://localhost:{{ sonarqube_port }}"
    return_content: true
  register: sonarqube_health
  until: sonarqube_health.status == 200
  retries: 60
  delay: 5
