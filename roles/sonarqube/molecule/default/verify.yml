---
- name: Verify
  hosts: all
  become: true
  vars:
    sonarqube_port: "9000"
    sonarqube_base_dir: "/opt/sonarqube"
    sonarqube_version: "10.3.0.82913"
    sonarqube_install_dir: "{{ sonarqube_base_dir }}/sonarqube-{{ sonarqube_version }}"

  tasks:
    - name: Verify Java is installed
      ansible.builtin.command: java -version
      register: java_version
      changed_when: false
      failed_when: java_version.rc != 0

    - name: Verify SonarQube directories exist
      ansible.builtin.stat:
        path: "{{ item }}"
      register: dir_check
      failed_when: not dir_check.stat.exists or not dir_check.stat.isdir
      loop:
        - "{{ sonarqube_base_dir }}"
        - "{{ sonarqube_data_dir }}"
        - "{{ sonarqube_extensions_dir }}"
        - "{{ sonarqube_logs_dir }}"
        - "{{ sonarqube_temp_dir }}"
        - "{{ sonarqube_install_dir }}"

    - name: Verify SonarQube configuration file exists
      ansible.builtin.stat:
        path: "{{ sonarqube_install_dir }}/conf/sonar.properties"
      register: config_file
      failed_when: not config_file.stat.exists

    - name: Verify SonarQube service file exists
      ansible.builtin.stat:
        path: "/etc/systemd/system/sonarqube.service"
      register: service_file
      failed_when: not service_file.stat.exists

    - name: Verify SonarQube service is running
      ansible.builtin.service:
        name: sonarqube
        state: started
      register: sonarqube_service
      failed_when: not sonarqube_service.status.ActiveState == "active"

    - name: Wait for SonarQube to be available
      ansible.builtin.uri:
        url: "http://localhost:{{ sonarqube_port }}"
        status_code: 200
        timeout: 5
      register: sonarqube_response
      retries: 12
      delay: 10
      until: sonarqube_response.status == 200
      failed_when: false

    - name: Verify SonarQube API is responding
      ansible.builtin.uri:
        url: "http://localhost:{{ sonarqube_port }}/api/system/status"
        return_content: true
      register: api_response
      failed_when: "'status' not in api_response.content"

    - name: Check SonarQube logs for errors
      ansible.builtin.command: grep ERROR "{{ sonarqube_logs_dir }}/sonar.log" -c
      register: logs
      changed_when: false
      failed_when: logs.stdout|int > 0
